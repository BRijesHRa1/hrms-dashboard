{"ast":null,"code":"var _jsxFileName = \"/Users/brijeshrai/Documents/Cursor/HRMS dashboard/hrms-dashboard/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/api';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('jwtToken');\n    const userEmail = localStorage.getItem('userEmail');\n    const userName = localStorage.getItem('userName');\n    if (token && userEmail && userName) {\n      setCurrentUser({\n        email: userEmail,\n        name: userName\n      });\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const result = await authService.login(email, password);\n      if (result.success) {\n        setCurrentUser({\n          email: result.email,\n          name: result.name\n        });\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        message: result.message || 'Login failed'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || 'Login failed. Please try again.'\n      };\n    }\n  };\n\n  // Signup function\n  const signup = async (name, email, password) => {\n    try {\n      const result = await authService.signup(name, email, password);\n      return {\n        success: result.success,\n        message: result.message\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: error.message || 'Signup failed. Please try again.'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    authService.logout();\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to use auth context\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","token","localStorage","getItem","userEmail","userName","email","name","login","password","result","success","message","error","signup","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/brijeshrai/Documents/Cursor/HRMS dashboard/hrms-dashboard/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authService } from '../services/api';\n\n// Create context\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('jwtToken');\n    const userEmail = localStorage.getItem('userEmail');\n    const userName = localStorage.getItem('userName');\n    \n    if (token && userEmail && userName) {\n      setCurrentUser({\n        email: userEmail,\n        name: userName\n      });\n    }\n    \n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const result = await authService.login(email, password);\n      if (result.success) {\n        setCurrentUser({\n          email: result.email,\n          name: result.name\n        });\n        return { success: true };\n      }\n      return { success: false, message: result.message || 'Login failed' };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.message || 'Login failed. Please try again.' \n      };\n    }\n  };\n\n  // Signup function\n  const signup = async (name, email, password) => {\n    try {\n      const result = await authService.signup(name, email, password);\n      return { \n        success: result.success, \n        message: result.message \n      };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.message || 'Signup failed. Please try again.' \n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    authService.logout();\n    setCurrentUser(null);\n  };\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n\n// Custom hook to use auth context\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}